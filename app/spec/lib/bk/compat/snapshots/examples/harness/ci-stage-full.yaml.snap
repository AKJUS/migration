---
steps:
- group: stage1
  key: stage1
  steps:
  - commands:
    - "# to make background services work, add the following composefile to your repository"
    - "# configure their command to force a particular shell in services"
    - |-
      cat > compose.yaml << EOF
      ---
      services:
        postgresdependency:
          image: postgres:10.8
          environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: <+secrets.getValue("DbPasswordSecret")>
            POSTGRES_DB: postgres

      EOF
    plugins:
    - docker-compose#v5.0.0:
        run: app
    key: background-postgres-dependency
  - commands:
    - echo "this runs on openjdk"
    - "# shell is environment-dependent and should be configured in the agent'"
    plugins:
    - docker#v5.10.0:
        image: openjdk:17.0-jdk
    label: Run_1
    key: Run_1
- commands:
  - |-
    echo "pipeline var:" <+pipeline.variables.pipelinevar1>
    echo "project level var:" <+variable.proj_var>
    echo "secret example :" <+secrets.getValue("DbPasswordSecret")>
  - "# shell is environment-dependent and should be configured in the agent'"
  plugins:
  - docker#v5.10.0:
      image: node:13.0.0
  label: stage2 Run_2
  key: stage2-Run_2
- commands:
  - echo "Testing on  <+matrix.testparam>"
  - "# shell is environment-dependent and should be configured in the agent'"
  matrix:
    setup:
      testparam:
      - node
      - python
      - ubuntu
  label: matrix stage Run_3
  key: matrix_stage-Run_3
  concurrency: 3
